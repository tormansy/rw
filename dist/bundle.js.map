{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://1/./src/scripts/index.ts"],"sourcesContent":["import './css/styles.css'\r\n\r\nconst start = document.querySelector('.start_game')\r\n\r\nconst levelID = document.getElementById('levels')\r\nconst startblock = document.querySelector('.app')\r\nconst gameBlock = document.querySelector('.game')\r\nconst cardBlock = document.querySelector('.card_block')\r\nconst restart = document.querySelector('.button_restart')\r\nconst cardsAll = document.querySelectorAll('.card')\r\nconst boxLevel = document.querySelector('.box_level')\r\nconst finishBlock = document.querySelector('.finish_block')\r\nlet firstCard: Element | null = null\r\nlet secondCard: Element | null = null\r\nlet clicked = false\r\nlet levelCheck = 0\r\nlet win = false\r\n\r\nlevelID!.addEventListener('click', function (event) {\r\n let pick: any = event.target\r\n let lvlIDpick = [...document.querySelectorAll('.level')].indexOf(pick) + 1\r\n levelCheck = lvlIDpick\r\n})\r\n\r\nfinishBlock!.classList.add('finish_block_hidden')\r\ngameBlock!.classList.add('game_hidden')\r\ncardBlock!.classList.add('card_block_hidden')\r\n\r\nconst cards = [\r\n 'card_a1',\r\n 'card_a2',\r\n 'card_a3',\r\n 'card_a4',\r\n 'card_k1',\r\n 'card_k2',\r\n 'card_k3',\r\n 'card_k4',\r\n 'card_q1',\r\n 'card_q2',\r\n 'card_q3',\r\n 'card_q4',\r\n 'card_j1',\r\n 'card_j2',\r\n 'card_j3',\r\n 'card_j4',\r\n 'card10_1',\r\n 'card10_2',\r\n 'card10_3',\r\n 'card10_4',\r\n 'card9_1',\r\n 'card9_2',\r\n 'card9_3',\r\n 'card9_4',\r\n 'card8_1',\r\n 'card8_2',\r\n 'card8_3',\r\n 'card8_4',\r\n 'card7_1',\r\n 'card7_2',\r\n 'card7_3',\r\n 'card7_4',\r\n 'card6_1',\r\n 'card6_2',\r\n 'card6_3',\r\n 'card6_4',\r\n]\r\n\r\nstart!.addEventListener('click', () => {\r\n if (levelCheck === 0) {\r\n  console.log('уровень не выбран')\r\n }\r\n if (levelCheck === 1) {\r\n  hiddenBlocks()\r\n  let test = generateCard(3)\r\n  createdCards(test)\r\n  cardCheck()\r\n  timer()\r\n }\r\n if (levelCheck === 2) {\r\n  hiddenBlocks()\r\n  let test = generateCard(6)\r\n  createdCards(test)\r\n  cardCheck()\r\n  timer()\r\n }\r\n if (levelCheck === 3) {\r\n  hiddenBlocks()\r\n  let test = generateCard(9)\r\n  createdCards(test)\r\n  cardCheck()\r\n  timer()\r\n }\r\n})\r\n\r\nconst timeBlock = document.querySelector('.timer_block')\r\nlet sec = 0\r\nlet min = 0\r\nlet t: any\r\n\r\nfunction tick() {\r\n sec++\r\n if (sec >= 60) {\r\n  sec = 0\r\n  min++\r\n  if (min >= 60) {\r\n   min = 0\r\n  }\r\n }\r\n}\r\nfunction add() {\r\n tick()\r\n timeBlock!.textContent =\r\n  (min > 9 ? min : '0' + min) + ':' + (sec > 9 ? sec : '0' + sec)\r\n timer()\r\n}\r\nfunction timer() {\r\n t = setTimeout(add, 1000)\r\n}\r\n\r\nfunction res() {\r\n clearInterval(t)\r\n cardBlock!.textContent = ''\r\n timeBlock!.textContent = '00:00'\r\n sec = 0\r\n min = 0\r\n firstCard = null\r\n secondCard = null\r\n clicked = false\r\n cardsAll.forEach((card) => {\r\n  card.classList.remove('back')\r\n })\r\n startblock!.classList.remove('app_hidden')\r\n gameBlock!.classList.add('game_hidden')\r\n cardBlock!.classList.add('card_block_hidden')\r\n gameBlock!.classList.remove('opacity_finish')\r\n cardBlock!.classList.remove('opacity_finish')\r\n finishBlock!.classList.add('finish_block_hidden')\r\n boxLevel!.classList.remove('box_level_hidden')\r\n}\r\n\r\nrestart!.addEventListener('click', () => {\r\n res()\r\n})\r\n\r\nfunction generateCard(cardI: number) {\r\n let cardNewArr: any[] = []\r\n for (let i = 0; i < cardI; i++) {\r\n  let randI = Math.floor(Math.random() * cards.length)\r\n  let pickCard = cards[randI]\r\n  cards.slice(randI, 1)\r\n  cardNewArr.push(pickCard)\r\n  cardNewArr.push(pickCard)\r\n }\r\n return cardNewArr\r\n}\r\n\r\nfunction createdCards(test: any[]) {\r\n test.sort(() => Math.random() - 0.5)\r\n console.log(test)\r\n for (let tests of test) {\r\n  let cardII = document.createElement('div')\r\n  cardII.classList.add('card')\r\n  cardII.classList.add(tests)\r\n  cardII.id = tests\r\n  cardBlock!.appendChild(cardII)\r\n  setTimeout(() => {\r\n   cardII.classList.add('back')\r\n   clicked = true\r\n  }, 5000)\r\n }\r\n}\r\n\r\nfunction cardCheck() {\r\n let complireCardArr: any[] = []\r\n const cards2 = document.querySelectorAll('.card')\r\n cards2.forEach((card) =>\r\n  card.addEventListener('click', () => {\r\n   if (clicked === true && !card.classList.contains('sucsess')) {\r\n    card.classList.remove('back')\r\n\r\n    if (firstCard === null) {\r\n     firstCard = card\r\n    } else if (card !== firstCard) {\r\n      secondCard = card\r\n    }\r\n    if (firstCard && secondCard && firstCard !== secondCard) {\r\n     if (firstCard.id === secondCard.id) {\r\n      console.log('true')\r\n      firstCard.classList.add('sucsess')\r\n      secondCard.classList.add('sucsess')\r\n      complireCardArr.push(firstCard)\r\n      complireCardArr.push(secondCard)\r\n      if (cards2.length !== complireCardArr.length) {\r\n       firstCard = null\r\n       secondCard = null\r\n      }\r\n     } else {\r\n      alert('Вы проиграли')\r\n      console.log('lose')\r\n      clicked = false\r\n      win = false\r\n      finish()\r\n     }\r\n    }\r\n   }\r\n   if (cards2.length === complireCardArr.length) {\r\n    alert('Вы выиграли')\r\n    console.log('win')\r\n    clicked = false\r\n    win = true\r\n    finish()\r\n   }\r\n   console.log(firstCard, secondCard)\r\n  })\r\n )\r\n}\r\n\r\nfunction finish() {\r\n clearInterval(t)\r\n startblock!.classList.remove('app_hidden')\r\n finishBlock!.classList.remove('finish_block_hidden')\r\n gameBlock!.classList.add('opacity_finish')\r\n cardBlock!.classList.add('opacity_finish')\r\n const title = document.querySelector('.title_finish')\r\n const titleIcon = document.querySelector('.title_icon')\r\n const fTime = document.querySelector('.total_time')\r\n fTime!.textContent = `${timeBlock!.textContent}`\r\n const restart2 = document.querySelector('.button_restart2')\r\n if (win) {\r\n  title!.textContent = 'Вы выиграли!'\r\n  titleIcon!.classList.remove('title_icon_lose')\r\n  titleIcon!.classList.add('title_icon_win')\r\n } else {\r\n  title!.textContent = 'Вы проиграли!'\r\n  titleIcon!.classList.remove('title_icon_win')\r\n  titleIcon!.classList.add('title_icon_lose')\r\n }\r\n restart2!.addEventListener('click', () => {\r\n  res()\r\n })\r\n}\r\n\r\nfunction hiddenBlocks() {\r\n cardBlock!.textContent = ''\r\n startblock!.classList.add('app_hidden')\r\n boxLevel!.classList.add('box_level_hidden')\r\n gameBlock!.classList.remove('game_hidden')\r\n cardBlock!.classList.remove('card_block_hidden')\r\n}\r\n"],"names":["start","document","querySelector","levelID","getElementById","startblock","gameBlock","cardBlock","restart","cardsAll","querySelectorAll","boxLevel","finishBlock","firstCard","secondCard","clicked","levelCheck","win","addEventListener","event","pick","target","lvlIDpick","indexOf","classList","add","cards","console","log","hiddenBlocks","createdCards","generateCard","cardCheck","timer","timeBlock","t","sec","min","textContent","setTimeout","res","clearInterval","forEach","card","remove","cardI","cardNewArr","i","randI","Math","floor","random","length","pickCard","slice","push","test","sort","tests","cardII","createElement","id","appendChild","complireCardArr","cards2","contains","alert","finish","title","titleIcon","restart2"],"sourceRoot":""}